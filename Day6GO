package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
)

func main() {
	dimm := 1002
	var grid [1002][1002]int
	var grid2 [1002][1002]int
	for i := 0; i < dimm; i++ {
		for j := 0; j < dimm; j++ {
			grid[i][j] = 0
			grid2[i][j] = 0
		}
	}
	file, err := os.Open("init")
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()
	scanner := bufio.NewScanner(file)
	for scanner.Scan() {
		rule := OnOff(scanner.Text())
		points := dataIn(scanner.Text())
		if rule == 0 {
			for i := points[0]; i < points[2]+1; i++ {
				for y := points[1]; y < points[3]+1; y++ {
					grid[i][y] = 0
					if grid2[i][y] != 0 {
						grid2[i][y] -= 1
					}
				}
			}
		} else if rule == 1 {
			for i := points[0]; i < points[2]+1; i++ {
				for y := points[1]; y < points[3]+1; y++ {
					grid[i][y] = 1
					grid2[i][y] += 1
				}
			}
		} else {
			for i := points[0]; i < points[2]+1; i++ {
				for y := points[1]; y < points[3]+1; y++ {
					if grid[i][y] == 0 {
						grid[i][y] = 1
					} else {
						grid[i][y] = 0
					}
					grid2[i][y] += 2
				}
			}
		}
	}
	if err := scanner.Err(); err != nil {
		log.Fatal(err)
	}
	total := 0
	totalz := 0
	for i := 0; i < dimm; i++ {
		for j := 0; j < dimm; j++ {
			total += grid[i][j]
			totalz += grid2[i][j]
		}
	}
	fmt.Println(total)
	fmt.Println(totalz)
}
func OnOff(str string) int {
	if strings.Contains(str, "turn on") {
		return 1
	} else if strings.Contains(str, "turn off") {
		return 0
	} else {
		return -1
	}
}
func dataIn(line string) [4]int {
	var out [4]int
	line = strings.Replace(line, "turn on", "", -1)
	line = strings.Replace(line, "turn off", "", -1)
	line = strings.Replace(line, "toggle", "", -1)
	line = strings.Replace(line, " ", "", -1)
	line = strings.Replace(line, "through", ",", -1)
	hold := strings.Split(line, ",")
	for i := 0; i < len(hold); i++ {
		tmp, _ := strconv.Atoi(hold[i])
		out[i] = tmp
	}
	return out
}

//TIP See GoLand help at <a href="https://www.jetbrains.com/help/go/">jetbrains.com/help/go/</a>.
// Also, you can try interactive lessons for GoLand by selecting 'Help | Learn IDE Features' from the main menu.
